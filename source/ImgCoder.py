from PIL import Image
import random

char_lib = {
    'a': '0000000',
    'b': '0000001',
    'c': '0000010',
    'd': '0000011',
    'e': '0000100',
    'f': '0000101',
    'g': '0000110',
    'h': '0000111',
    'i': '0001000',
    'j': '0001001',
    'k': '0001010',
    'l': '0001011',
    'm': '0001100',
    'n': '0001101',
    'o': '0001110',
    'p': '0001111',
    'q': '0010000',
    'r': '0010001',
    's': '0010010',
    't': '0010011',
    'u': '0010100',
    'v': '0010101',
    'w': '0010110',
    'x': '0010111',
    'y': '0011000',
    'z': '0011001',
    'A': '0011010',
    'B': '0011011',
    'C': '0011100',
    'D': '0011101',
    'E': '0011110',
    'F': '0011111',
    'G': '0100000',
    'H': '0100001',
    'I': '0100010',
    'J': '0100011',
    'K': '0100100',
    'L': '0100101',
    'M': '0100110',
    'N': '0100111',
    'O': '0101000',
    'P': '0101001',
    'Q': '0101010',
    'R': '0101011',
    'S': '0101100',
    'T': '0101101',
    'U': '0101110',
    'V': '0101111',
    'W': '0110000',
    'X': '0110001',
    'Y': '0110010',
    'Z': '0110011',
    '0': '0110100',
    '1': '0110101',
    '2': '0110110',
    '3': '0110111',
    '4': '0111000',
    '5': '0111001',
    '6': '0000010',
    '7': '0111011',
    '8': '0111100',
    '9': '0111101',
    '_': '0111110',
    '-': '0111111',
    ':': '1000000',
    '.': '1000001',
    ',': '1000010',
    ' ': '1000011',
    '\n': '1000100',
    "'": '1000101',
    '"': '1000110',
    '?': '1000111',
    '!': '1001000',
    'в': '1001001',
    'Ђ': '1001010',
    '”': '1001011'
}

img = Image.open("source/example.jpg")
img = img.convert("RGBA")
pixels = img.load()
s = 0
with open('source/Input_Text.txt', 'r') as inp_file:
    data = inp_file.read()
    bin_representation = ''
    for i in range(len(data)):
        bin_representation += char_lib[data[i]]

index = 0
max_size = len(bin_representation)
for i in range(img.size[0]):
    for j in range(img.size[1]):
        if (i * img.size[0] + j < max_size):
            pixels[i, j] = (pixels[i, j][0], pixels[i, j][1], pixels[i, j][2], 255 - int(bin_representation[i * img.size[0] + j]))
        elif (i * img.size[0] + j == max_size):
            pixels[i, j] = (pixels[i, j][0], pixels[i, j][1], pixels[i, j][2], 253)
        else:
            pixels[i, j] = (pixels[i, j][0], pixels[i, j][1], pixels[i, j][2], random.randint(254, 255))
img.show()